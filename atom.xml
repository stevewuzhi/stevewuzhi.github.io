<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>stevewuzhi&#39;s gitpage</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://stevewuzhi.github.io/"/>
  <updated>2019-04-18T13:10:01.729Z</updated>
  <id>https://stevewuzhi.github.io/</id>
  
  <author>
    <name>stevewuzhi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>系统分析与设计 作业2</title>
    <link href="https://stevewuzhi.github.io/2019/04/02/swad-hw2/"/>
    <id>https://stevewuzhi.github.io/2019/04/02/swad-hw2/</id>
    <published>2019-04-02T11:17:20.000Z</published>
    <updated>2019-04-18T13:10:01.729Z</updated>
    
    <content type="html"><![CDATA[<p>By stevewuzhi(15322220)</p><hr><p>简答题</p><ul><li>用简短的语言给出对分析、设计的理解。</li><li>用一句话描述面向对象的分析与设计的优势。</li><li>简述 UML（统一建模语言）的作用。考试考哪些图？</li><li>从软件本质的角度，解释软件范围（需求）控制的可行性</li></ul><a id="more"></a><h2 id="1-分析、设计"><a href="#1-分析、设计" class="headerlink" title="1. 分析、设计"></a>1. 分析、设计</h2><p>分析是对用户需求的调研, 进而得出设计需求。分析的目的不是得出解决方案。</p><p>设计强调从概念上的解决方案, 并非具体实现。</p><h2 id="2-面向对象的分析与设计的优势"><a href="#2-面向对象的分析与设计的优势" class="headerlink" title="2. 面向对象的分析与设计的优势"></a>2. 面向对象的分析与设计的优势</h2><p> 面向对象的分析与设计, 令设计人员能对现实中的使用实体进行更高级别的抽象, 定义其属性和行为，简化了实现时对代码的理解难度, 使之有一定的自解释性。</p><h2 id="3-简述-UML（统一建模语言）的作用。考试考哪些图"><a href="#3-简述-UML（统一建模语言）的作用。考试考哪些图" class="headerlink" title="3. 简述 UML（统一建模语言）的作用。考试考哪些图?"></a>3. 简述 UML（统一建模语言）的作用。考试考哪些图?</h2><p>UML是使分析设计结果可视化的标准图表语言；它可作为草图，非正式和不完整的图表，利用可视化语言的力量来对问题的困难部分进行探索；可作为蓝图，用于逆向工程以便于更好的可视化和理解已有的代码；甚至可作为编程语言，在UML中完成软件系统的可执行规范。可执行文件代码将自动生成，但通常不会被开发人员看到或修改。</p><p>考试考 <strong>用例图、活动图、系统顺序图、UML类图</strong>。</p><h2 id="4-从软件本质的角度，解释软件范围（需求）控制的可行性"><a href="#4-从软件本质的角度，解释软件范围（需求）控制的可行性" class="headerlink" title="4. 从软件本质的角度，解释软件范围（需求）控制的可行性"></a>4. 从软件本质的角度，解释软件范围（需求）控制的可行性</h2><p>软件是由用户丰富而复杂的需求、程序员有限而不完全可靠的实现的产物。</p><h2 id="5-看板"><a href="#5-看板" class="headerlink" title="5. 看板"></a>5. 看板</h2><p><img src="https://i.loli.net/2019/04/18/5cb8756457429.png" alt="kanban.png"></p><h2 id="6-UML图"><a href="#6-UML图" class="headerlink" title="6. UML图"></a>6. UML图</h2><p>P7：图1-5<br><img src="https://i.loli.net/2019/04/18/5cb872112cd52.png" alt="uml.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;By stevewuzhi(15322220)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;简答题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用简短的语言给出对分析、设计的理解。&lt;/li&gt;
&lt;li&gt;用一句话描述面向对象的分析与设计的优势。&lt;/li&gt;
&lt;li&gt;简述 UML（统一建模语言）的作用。考试考哪些图？&lt;/li&gt;
&lt;li&gt;从软件本质的角度，解释软件范围（需求）控制的可行性&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="系分" scheme="https://stevewuzhi.github.io/tags/%E7%B3%BB%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>系统分析与设计 作业1</title>
    <link href="https://stevewuzhi.github.io/2019/03/15/swad-hw1/"/>
    <id>https://stevewuzhi.github.io/2019/03/15/swad-hw1/</id>
    <published>2019-03-15T13:36:00.000Z</published>
    <updated>2019-03-14T14:23:31.990Z</updated>
    
    <content type="html"><![CDATA[<p>By stevewuzhi(15322220)</p><hr><p>简答题</p><ul><li>软件工程的定义</li><li>解释导致 software crisis 本质原因、表现，述说克服软件危机的方法</li><li>软件生命周期</li><li>SWEBoK 的 15 个知识域（<a href="https://www.sebokwiki.org/wiki/An_Overview_of_the_SWEBOK_Guide" target="_blank" rel="noopener">An Overview of the SWEBOK Guide</a> 请中文翻译其名称与简短说明）</li><li>简单解释 CMMI 的五个级别。例如：Level 1 - Initial：无序，自发生产模式。</li><li>用自己语言简述 SWEBok 或 CMMI （约200字）</li></ul><a id="more"></a><h2 id="1-软件工程的定义"><a href="#1-软件工程的定义" class="headerlink" title="1. 软件工程的定义"></a>1. 软件工程的定义</h2><p>将系统化、规范化、可度量的方法应用于软件的开发、运行和维护的过程，即将工程化应用于软件中。 </p><h2 id="2-解释导致-software-crisis-本质原因、表现，述说克服软件危机的方法"><a href="#2-解释导致-software-crisis-本质原因、表现，述说克服软件危机的方法" class="headerlink" title="2.解释导致 software crisis 本质原因、表现，述说克服软件危机的方法"></a>2.解释导致 software crisis 本质原因、表现，述说克服软件危机的方法</h2><p>导致软件危机的本质原因是: <strong>计算机运算能力的提高程度超过了程序员有效利用这些算力的能力。 </strong></p><p>表现:</p><ul><li>项目运行超预算</li><li>项目运行时间过长</li><li>软件效率很低</li><li>软件质量很差</li><li>软件通常不符合要求</li><li>项目难以管理，代码难以维护</li><li>软件从未交付过</li></ul><p>克服软件危机的方法: </p><p>在软件开发的过程中引入工程思想, 即<strong>“软件工程”</strong>。其建立与系统化软件生产有关的概念、原则、方法、技术和工具，指导和支持软件系统的生产活动，以期达到降低软件生产成本 、改进软件产品质量、提高软件生产率水平的目标。 </p><h2 id="3-软件生命周期"><a href="#3-软件生命周期" class="headerlink" title="3. 软件生命周期"></a>3. 软件生命周期</h2><p>在软件工程中，软件开发过程是将软件开发工作划分为不同阶段以改进设计，产品管理和项目管理的过程。它也被称为软件开发生命周期。该方法可以包括由项目团队创建和完成以开发或维护应用程序的特定可交付物和工件的预定义。</p><p>大多数现代开发过程都可以模糊地描述为敏捷。其他方法包括瀑布法，原型法，迭代和增量开发，螺旋法，敏捷开发和极限编程。</p><h2 id="4-SWEBoK-的-15-个知识域"><a href="#4-SWEBoK-的-15-个知识域" class="headerlink" title="4. SWEBoK 的 15 个知识域"></a>4. SWEBoK 的 15 个知识域</h2><p><span id="swebok"></span></p><p><strong>软件工程实践的知识域</strong>: 软件需求, 软件设计, 软件构建, 软件测试, 软件维护, 软件配置管理, 软件工程管理, 软件工程流程, 软件工程模型和方法, 软件质量, 软件工程专业实践</p><p><strong>软件工程教育要求的知识域</strong>: 软件工程经济学, 计算科学基础, 数学基础, 工程基础</p><h2 id="5-简单解释CMMI-的5个级别"><a href="#5-简单解释CMMI-的5个级别" class="headerlink" title="5. 简单解释CMMI 的5个级别"></a>5. 简单解释CMMI 的5个级别</h2><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Characteristics_of_Capability_Maturity_Model.svg/500px-Characteristics_of_Capability_Maturity_Model.svg.png" alt></p><p>CMMI的五个级别<br>Level 1 - Initial：流程不可预测, 难以控制, 灵活性低。<br>Level 2 - Managed：流程制度化，灵活度高。<br>Level 3 - Defined：流程根据组织标准进行, 具有前瞻性。<br>Level 4 - Quantitatively Managed：流程可控且可度量。<br>Level 5 - Optimizing：流程专注于改进。</p><h2 id="6-用自己语言简述-SWEBoK-或-CMMI"><a href="#6-用自己语言简述-SWEBoK-或-CMMI" class="headerlink" title="6. 用自己语言简述 SWEBoK 或 CMMI"></a>6. 用自己语言简述 SWEBoK 或 CMMI</h2><p>SWEBoK是一套软件工程领域的知识体系国际标准, 其制定的目的为:</p><ul><li>表征软件工程学科的内容</li><li>统一全球软件工程的观点</li><li>明确软件工程相对于其他学科的地位和界定</li><li>为培训材料和课程开发提供基础</li><li>为软件工程师的认证和许可提供基础</li></ul><p>目前SWEBoK的最新版本版本是第三版, 共包含15个知识领域(见<a href="#swebok">4.</a>)。此外SWEBoK还定义了软件工程的<strong>相关学科</strong>, 包括: 计算机工程学, 计算机科学, 综合管理学, 数学, 项目管理, 质量管理, 系统流程学。</p><p>Ref: </p><ol><li>Software Crisis - Wikipedia: <a href="https://en.wikipedia.org/wiki/Software_crisis" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Software_crisis</a></li><li>软件危机 - 维基百科: <a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA</a></li><li>软件生命周期 - 维基百科: <a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F</a></li><li>Software development process - Wikipedia:  <a href="https://en.wikipedia.org/wiki/Software_lifecycle" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Software_lifecycle</a></li><li>CMMI - Wikipedia : <a href="https://en.wikipedia.org/wiki/CMMI" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/CMMI</a></li><li>能力成熟度模型集成 - 维基百科 : <a href="https://zh.wikipedia.org/wiki/%E8%83%BD%E5%8A%9B%E6%88%90%E7%86%9F%E5%BA%A6%E6%A8%A1%E5%9E%8B%E9%9B%86%E6%88%90" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E8%83%BD%E5%8A%9B%E6%88%90%E7%86%9F%E5%BA%A6%E6%A8%A1%E5%9E%8B%E9%9B%86%E6%88%90</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;By stevewuzhi(15322220)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;简答题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;软件工程的定义&lt;/li&gt;
&lt;li&gt;解释导致 software crisis 本质原因、表现，述说克服软件危机的方法&lt;/li&gt;
&lt;li&gt;软件生命周期&lt;/li&gt;
&lt;li&gt;SWEBoK 的 15 个知识域（&lt;a href=&quot;https://www.sebokwiki.org/wiki/An_Overview_of_the_SWEBOK_Guide&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;An Overview of the SWEBOK Guide&lt;/a&gt; 请中文翻译其名称与简短说明）&lt;/li&gt;
&lt;li&gt;简单解释 CMMI 的五个级别。例如：Level 1 - Initial：无序，自发生产模式。&lt;/li&gt;
&lt;li&gt;用自己语言简述 SWEBok 或 CMMI （约200字）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="系分" scheme="https://stevewuzhi.github.io/tags/%E7%B3%BB%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>Hello world</title>
    <link href="https://stevewuzhi.github.io/2019/03/13/Hello-world/"/>
    <id>https://stevewuzhi.github.io/2019/03/13/Hello-world/</id>
    <published>2019-03-13T04:34:07.000Z</published>
    <updated>2019-03-13T12:35:07.441Z</updated>
    
    <content type="html"><![CDATA[<p>By stevewuzhi</p><hr><p>This is a hello world page.</p><a id="more"></a><p>Hello world!</p><p>Powered by hexo.</p><p>2019.3.13</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;By stevewuzhi&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This is a hello world page.&lt;/p&gt;
    
    </summary>
    
    
      <category term="系分" scheme="https://stevewuzhi.github.io/tags/%E7%B3%BB%E5%88%86/"/>
    
  </entry>
  
</feed>
